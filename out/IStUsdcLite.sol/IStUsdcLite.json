{"abi":[{"type":"function","name":"setUsdPerShare","inputs":[{"name":"yieldPerShares","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sharesByUsd","inputs":[{"name":"usdAmount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"sharesOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalShares","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalUsd","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transferShares","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"sharesAmount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferSharesFrom","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"sharesAmount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"usdByShares","inputs":[{"name":"sharesAmount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"SharesBurnt","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"preRebaseTokenAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"postRebaseTokenAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"sharesAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TransferShares","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"sharesAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UpdatedYieldPerShare","inputs":[{"name":"yieldPerShares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"setUsdPerShare(uint256)":"7d85b158","sharesByUsd(uint256)":"2088d7c6","sharesOf(address)":"f5eb42dc","totalShares()":"3a98ef39","totalUsd()":"527913b1","transferShares(address,uint256)":"8fcb4e5b","transferSharesFrom(address,address,uint256)":"6d780459","usdByShares(uint256)":"8b33021d"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preRebaseTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"postRebaseTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesAmount\",\"type\":\"uint256\"}],\"name\":\"SharesBurnt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesAmount\",\"type\":\"uint256\"}],\"name\":\"TransferShares\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"yieldPerShares\",\"type\":\"uint256\"}],\"name\":\"UpdatedYieldPerShare\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"yieldPerShares\",\"type\":\"uint256\"}],\"name\":\"setUsdPerShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"}],\"name\":\"sharesByUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"sharesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesAmount\",\"type\":\"uint256\"}],\"name\":\"transferShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesAmount\",\"type\":\"uint256\"}],\"name\":\"transferSharesFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesAmount\",\"type\":\"uint256\"}],\"name\":\"usdByShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"SharesBurnt(address,uint256,uint256,uint256)\":{\"details\":\"Reports simultaneously burnt shares amount and corresponding stUsdc amount. The stUsdc amount is calculated twice: before and after the burning incurred rebase.\",\"params\":{\"account\":\"holder of the burnt shares\",\"postRebaseTokenAmount\":\"amount of stUsdc the burnt shares corresponded to after the burn\",\"preRebaseTokenAmount\":\"amount of stUsdc the burnt shares corresponded to before the burn\",\"sharesAmount\":\"amount of burnt shares\"}},\"TransferShares(address,address,uint256)\":{\"details\":\"emitted in pair with an ERC20-defined `Transfer` event.\",\"params\":{\"from\":\"Address of the sender\",\"sharesAmount\":\"Amount of shares transferred\",\"to\":\"Address of the recipient\"}}},\"kind\":\"dev\",\"methods\":{\"setUsdPerShare(uint256)\":{\"params\":{\"yieldPerShares\":\"The additional yield per share to be distributed.\"}},\"sharesByUsd(uint256)\":{\"params\":{\"usdAmount\":\"Amount of Usd\"}},\"sharesOf(address)\":{\"params\":{\"account\":\"Account to get shares of\"}},\"totalShares()\":{\"details\":\"The sum of all accounts' shares can be an arbitrary number, therefore it is necessary to store it in order to calculate each account's relative share.\"},\"totalUsd()\":{\"details\":\"The sum of all USD balances in the protocol, equals to the total supply of stUsdc.\",\"returns\":{\"_0\":\"the entire amount of Usd controlled by the protocol.\"}},\"transferShares(address,uint256)\":{\"details\":\"Emits a `TransferShares` event.Emits a `Transfer` event.The `sharesAmount` argument is the amount of shares, not tokens. Requirements: - `recipient` cannot be the zero address. - the caller must have at least `sharesAmount` shares.\",\"params\":{\"recipient\":\"recipient of stUsdc tokens\",\"sharesAmount\":\"Amount of shares being transfered\"}},\"transferSharesFrom(address,address,uint256)\":{\"details\":\"Emits a `TransferShares` event.Emits a `Transfer` event. Requirements: - `sender` and `recipient` cannot be the zero addresses. - `sender` must have at least `sharesAmount` shares. - the caller must have allowance for `sender`'s tokens of at least `getUsdByShares(sharesAmount)`.\",\"params\":{\"recipient\":\"Destination of stUsdc tokens\",\"sender\":\"Sender of stUsdc tokens\",\"sharesAmount\":\"Amount of shares being transfered\"}},\"usdByShares(uint256)\":{\"params\":{\"sharesAmount\":\"Amount of shares\"},\"returns\":{\"_0\":\"Amount of Usd that corresponds to `sharesAmount` token shares.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"SharesBurnt(address,uint256,uint256,uint256)\":{\"notice\":\"An executed `burnShares` request\"},\"TransferShares(address,address,uint256)\":{\"notice\":\"An executed shares transfer from `sender` to `recipient`.\"},\"UpdatedYieldPerShare(uint256)\":{\"notice\":\"Emitted when yieldPerShares is updated\"}},\"kind\":\"user\",\"methods\":{\"setUsdPerShare(uint256)\":{\"notice\":\"Distribute yield according to the consentration of shares relative to         implementations on other chains.\"},\"sharesByUsd(uint256)\":{\"notice\":\"Get the amount of shares that corresponds to a given dollar value.\"},\"sharesOf(address)\":{\"notice\":\"Get the amount of shares owned by `_account`\"},\"totalShares()\":{\"notice\":\"Get the total amount of shares in existence.\"},\"transferShares(address,uint256)\":{\"notice\":\"Transfer shares from caller to recipient\"},\"transferSharesFrom(address,address,uint256)\":{\"notice\":\"Transfer shares from one account to another\"},\"usdByShares(uint256)\":{\"notice\":\"Get the amount of Usd that corresponds to a given number of token shares.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IStUsdcLite.sol\":\"IStUsdcLite\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":150},\"remappings\":[\":@LayerZero-Protocol/=lib/LayerZero-v2/protocol/contracts/\",\":@LayerZero/=lib/LayerZero-v2/oapp/contracts/\",\":@LayerZeroTesting/=lib/LayerZero-v2/oapp/test/\",\":@axelar-network/=lib/LayerZero-v2/messagelib/node_modules/@axelar-network/\",\":@bloom-v2/=lib/bloom-v2/src/\",\":@chainlink/=lib/bloom-v2/lib/chainlink/contracts/src/v0.8/\",\":@layerzerolabs/=lib/LayerZero-v2/oapp/node_modules/@layerzerolabs/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solady/=lib/bloom-v2/lib/solady/src/\",\":LayerZero-v2/=lib/LayerZero-v2/\",\":bloom-v2/=lib/bloom-v2/\",\":chainlink/=lib/bloom-v2/lib/chainlink/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=lib/LayerZero-v2/messagelib/node_modules/hardhat-deploy/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solady/=lib/solady/src/\",\":solidity-bytes-utils/=lib/LayerZero-v2/oapp/node_modules/solidity-bytes-utils/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/IStUsdcLite.sol\":{\"keccak256\":\"0x35db4e666ed3992589b7c0bd2ff2bf3fb680578fe664914fdd9aa8c63a39ea63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2126479a0eaa0995c2267fc54086c82c21d2756005c49e03ec4fad571f050ced\",\"dweb:/ipfs/QmXArL9GDos6AP1bVoBZuc8JFDBCB4oe3kQk3V69iS3ZxN\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"uint256","name":"preRebaseTokenAmount","type":"uint256","indexed":false},{"internalType":"uint256","name":"postRebaseTokenAmount","type":"uint256","indexed":false},{"internalType":"uint256","name":"sharesAmount","type":"uint256","indexed":false}],"type":"event","name":"SharesBurnt","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"sharesAmount","type":"uint256","indexed":false}],"type":"event","name":"TransferShares","anonymous":false},{"inputs":[{"internalType":"uint256","name":"yieldPerShares","type":"uint256","indexed":false}],"type":"event","name":"UpdatedYieldPerShare","anonymous":false},{"inputs":[{"internalType":"uint256","name":"yieldPerShares","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setUsdPerShare"},{"inputs":[{"internalType":"uint256","name":"usdAmount","type":"uint256"}],"stateMutability":"view","type":"function","name":"sharesByUsd","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"sharesOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalUsd","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"sharesAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"sharesAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferSharesFrom","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"sharesAmount","type":"uint256"}],"stateMutability":"view","type":"function","name":"usdByShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"setUsdPerShare(uint256)":{"params":{"yieldPerShares":"The additional yield per share to be distributed."}},"sharesByUsd(uint256)":{"params":{"usdAmount":"Amount of Usd"}},"sharesOf(address)":{"params":{"account":"Account to get shares of"}},"totalShares()":{"details":"The sum of all accounts' shares can be an arbitrary number, therefore it is necessary to store it in order to calculate each account's relative share."},"totalUsd()":{"details":"The sum of all USD balances in the protocol, equals to the total supply of stUsdc.","returns":{"_0":"the entire amount of Usd controlled by the protocol."}},"transferShares(address,uint256)":{"details":"Emits a `TransferShares` event.Emits a `Transfer` event.The `sharesAmount` argument is the amount of shares, not tokens. Requirements: - `recipient` cannot be the zero address. - the caller must have at least `sharesAmount` shares.","params":{"recipient":"recipient of stUsdc tokens","sharesAmount":"Amount of shares being transfered"}},"transferSharesFrom(address,address,uint256)":{"details":"Emits a `TransferShares` event.Emits a `Transfer` event. Requirements: - `sender` and `recipient` cannot be the zero addresses. - `sender` must have at least `sharesAmount` shares. - the caller must have allowance for `sender`'s tokens of at least `getUsdByShares(sharesAmount)`.","params":{"recipient":"Destination of stUsdc tokens","sender":"Sender of stUsdc tokens","sharesAmount":"Amount of shares being transfered"}},"usdByShares(uint256)":{"params":{"sharesAmount":"Amount of shares"},"returns":{"_0":"Amount of Usd that corresponds to `sharesAmount` token shares."}}},"version":1},"userdoc":{"kind":"user","methods":{"setUsdPerShare(uint256)":{"notice":"Distribute yield according to the consentration of shares relative to         implementations on other chains."},"sharesByUsd(uint256)":{"notice":"Get the amount of shares that corresponds to a given dollar value."},"sharesOf(address)":{"notice":"Get the amount of shares owned by `_account`"},"totalShares()":{"notice":"Get the total amount of shares in existence."},"transferShares(address,uint256)":{"notice":"Transfer shares from caller to recipient"},"transferSharesFrom(address,address,uint256)":{"notice":"Transfer shares from one account to another"},"usdByShares(uint256)":{"notice":"Get the amount of Usd that corresponds to a given number of token shares."}},"version":1}},"settings":{"remappings":["@LayerZero-Protocol/=lib/LayerZero-v2/protocol/contracts/","@LayerZero/=lib/LayerZero-v2/oapp/contracts/","@LayerZeroTesting/=lib/LayerZero-v2/oapp/test/","@axelar-network/=lib/LayerZero-v2/messagelib/node_modules/@axelar-network/","@bloom-v2/=lib/bloom-v2/src/","@chainlink/=lib/bloom-v2/lib/chainlink/contracts/src/v0.8/","@layerzerolabs/=lib/LayerZero-v2/oapp/node_modules/@layerzerolabs/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@solady/=lib/bloom-v2/lib/solady/src/","LayerZero-v2/=lib/LayerZero-v2/","bloom-v2/=lib/bloom-v2/","chainlink/=lib/bloom-v2/lib/chainlink/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","hardhat-deploy/=lib/LayerZero-v2/messagelib/node_modules/hardhat-deploy/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","solady/=lib/solady/src/","solidity-bytes-utils/=lib/LayerZero-v2/oapp/node_modules/solidity-bytes-utils/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":150},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IStUsdcLite.sol":"IStUsdcLite"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"src/interfaces/IStUsdcLite.sol":{"keccak256":"0x35db4e666ed3992589b7c0bd2ff2bf3fb680578fe664914fdd9aa8c63a39ea63","urls":["bzz-raw://2126479a0eaa0995c2267fc54086c82c21d2756005c49e03ec4fad571f050ced","dweb:/ipfs/QmXArL9GDos6AP1bVoBZuc8JFDBCB4oe3kQk3V69iS3ZxN"],"license":"MIT"}},"version":1},"id":78}